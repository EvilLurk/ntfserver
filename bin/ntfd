#!/usr/bin/env node

var fs = require('fs')
  , iniparser = require('iniparser')
  , nomnom = require('nomnom')
  , path = require('path')
  , global = require('../lib/ntfd/global')
  , ntfd = require('../lib/ntfd')

var options = nomnom.opts({
  config: {
    abbr: 'c',
    default: 'ntfd.conf',
    help: 'Configuration files',
  },
  version: {
    abbr: 'v',
    help: 'Display version',
  },
}).parseArgs()

if (options.version) {
  console.log(ntfd.version)
  process.exit(0)
}

try {
  var stat = fs.lstatSync(options.config)
} catch(err) {
  console.log('Configuration file not found: ' + options.config)
  process.exit(1)
}

if (!stat.isFile()) {
  console.log('Configuration path is not a file: ' + options.config)
  process.exit(1)
}

var config = exports.config = options.config ?
  iniparser.parseSync(options.config) : {}

if (config.test.module == 'ntfd') {
  config.test.module = path.join(path.dirname(require.resolve('ntf')), '..', '..', 'examples', 'basic')
}

try {
  config.test.module = require(config.test.module)
} catch(err) {
  console.log('Failed to load test module: ' + err)
  process.exit(1)
}

var server = ntfd.createServer(config)

server.listen(global.config.http.port)
